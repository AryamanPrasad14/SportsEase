{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryaman\\\\OneDrive\\\\Desktop\\\\sportspot-app - Copy\\\\frontend\\\\src\\\\contexts\\\\auth-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport { onAuthStateChanged, createUserWithEmailAndPassword, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\"; // make sure this is the correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Auto set current user when auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        const userData = {\n          uid: user.uid,\n          email: user.email\n        };\n        setCurrentUser(userData);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n      } else {\n        setCurrentUser(null);\n        localStorage.removeItem(\"user\");\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const login = async (email, password) => {\n    await signInWithEmailAndPassword(auth, email, password);\n  };\n  const register = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password);\n  };\n  const logout = async () => {\n    await signOut(auth);\n    localStorage.removeItem(\"user\");\n    setCurrentUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n// ✅ Custom hook to use AuthContext easily\n_s(AuthProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","onAuthStateChanged","createUserWithEmailAndPassword","signOut","signInWithEmailAndPassword","auth","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","unsubscribe","user","userData","uid","email","localStorage","setItem","JSON","stringify","removeItem","login","password","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Aryaman/OneDrive/Desktop/sportspot-app - Copy/frontend/src/contexts/auth-context.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\nimport {\n  onAuthStateChanged,\n  createUserWithEmailAndPassword,\n  signOut,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { auth } from \"../firebase\"; // make sure this is the correct path\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Auto set current user when auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        const userData = {\n          uid: user.uid,\n          email: user.email,\n        };\n        setCurrentUser(userData);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n      } else {\n        setCurrentUser(null);\n        localStorage.removeItem(\"user\");\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const login = async (email, password) => {\n    await signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const register = async (email, password) => {\n    await createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  const logout = async () => {\n    await signOut(auth);\n    localStorage.removeItem(\"user\");\n    setCurrentUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ currentUser, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// ✅ Custom hook to use AuthContext easily\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACtE,SACEC,kBAAkB,EAClBC,8BAA8B,EAC9BC,OAAO,EACPC,0BAA0B,QACrB,eAAe;AACtB,SAASC,IAAI,QAAQ,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,WAAW,gBAAGX,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMY,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAGb,kBAAkB,CAACI,IAAI,EAAGU,IAAI,IAAK;MACrD,IAAIA,IAAI,EAAE;QACR,MAAMC,QAAQ,GAAG;UACfC,GAAG,EAAEF,IAAI,CAACE,GAAG;UACbC,KAAK,EAAEH,IAAI,CAACG;QACd,CAAC;QACDL,cAAc,CAACG,QAAQ,CAAC;QACxBG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,CAAC;MACxD,CAAC,MAAM;QACLH,cAAc,CAAC,IAAI,CAAC;QACpBM,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;MACjC;IACF,CAAC,CAAC;IAEF,OAAO,MAAMT,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAAA,CAAON,KAAK,EAAEO,QAAQ,KAAK;IACvC,MAAMrB,0BAA0B,CAACC,IAAI,EAAEa,KAAK,EAAEO,QAAQ,CAAC;EACzD,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOR,KAAK,EAAEO,QAAQ,KAAK;IAC1C,MAAMvB,8BAA8B,CAACG,IAAI,EAAEa,KAAK,EAAEO,QAAQ,CAAC;EAC7D,CAAC;EAED,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMxB,OAAO,CAACE,IAAI,CAAC;IACnBc,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;IAC/BV,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,WAAW;MAAEY,KAAK;MAAEE,QAAQ;MAAEC;IAAO,CAAE;IAAAjB,QAAA,EACnEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAtB,EAAA,CA3CaF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA4CzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOpC,UAAU,CAACQ,WAAW,CAAC;AAChC,CAAC;AAAC4B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}